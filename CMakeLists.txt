PROJECT(miniriemann)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(MINIRIEMANN_SRCS
    ${CMAKE_SOURCE_DIR}/src/miniriemann.cpp
    ${CMAKE_SOURCE_DIR}/src/tcpserver.cpp
    ${CMAKE_SOURCE_DIR}/src/streams.cpp
    ${CMAKE_SOURCE_DIR}/src/util.cpp
  )

SET(MINIRIEMANN_HDRS
    ${CMAKE_SOURCE_DIR}/src/
  )

SET(MINIRIEMANN_PROTOFILES
    ${CMAKE_SOURCE_DIR}/src/proto.proto
  )

ADD_DEFINITIONS( -Wall -std=c++11 -g )

INCLUDE(FindProtobuf)

FIND_PACKAGE(Protobuf REQUIRED)

# Try to find libev by hand
FIND_PATH(LIBEV_INCLUDE_DIR ev++.h HINTS /usr/include/)
FIND_LIBRARY(LIBEV_LIBRARIES NAMES ev)

MESSAGE("INCLUDE: ${LIBEV_INCLUDE_DIR}")
MESSAGE("LIBS: ${LIBEV_LIBRARIES}")

# Try to find glog
FIND_PATH(LIBGLOG_INCLUDE_DIR glog/logging.h HINTS /usr/include/)
FIND_LIBRARY(LIBGLOG_LIBRARIES NAMES glog)

MESSAGE("INCLUDE: ${LIBGLOG_INCLUDE_DIR}")
MESSAGE("LIBS: ${LIBGLOG_LIBRARIES}")

IF(PROTOBUF_FOUND)
  PROTOBUF_GENERATE_CPP(ProtoSources ProtoHeaders ${MINIRIEMANN_PROTOFILES})

  INCLUDE_DIRECTORIES(
      ${CMAKE_CURRENT_BINARY_DIR}
      ${CMAKE_BINARY_DIR}
      ${PROTOBUF_INCLUDE_DIR}
      ${MINIRIEMANN_HDRS}
    )

  ADD_EXECUTABLE(
      miniriemann
      ${MINIRIEMANN_SRCS}
      ${ProtoSources}
      ${ProtoHeaders}
      ${LIBEV_INCLUDE_DIR}
    )

  TARGET_LINK_LIBRARIES(
      miniriemann
      ${LIBEV_LIBRARIES}
      ${CMAKE_THREAD_LIBS_INIT}
      ${PROTOBUF_LIBRARY}
      ${LIBGLOG_LIBRARY}
      glog
    )

ENDIF(PROTOBUF_FOUND)
